# From https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

name: Build, Test, and Publish Docker images

# Trigger on *publish* of a release
# See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
on:
  release:
    types: [published]

jobs:
  matrixed-docker-build-test-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-docker-image: ["python:3.11-slim"]
        snap-atac-flavor: ["default", "recommend-interactive"]
    steps:
      # This will get the version of SnapATAC2 by looking at the the name of the tag for the github release
      # For `on release publish` workflows `github.ref` will be the release tag created (e.g. refs/tags/<tag_name>)
      # See: https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      - name: Get SnapATAC version
        run: echo "SNAP_ATAC_VERSION=$(echo ${{ github.ref }} | cut -d "/" -f 3)" >> $GITHUB_ENV
      # This makes some assumptions about `base-docker-image` name format so be sure to test this out if
      # things change. For `python:3.11-slim` this should result in `PY_VER_ABBRV=py3.11` beings saved to $GITHUB_ENV
      # See: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Get python version shorthand
        run: echo "PY_VER_ABBRV=py$(echo ${{ matrix.base-docker-image }} | cut -d ":" -f 2 | cut -d "-" -f 1)" >> $GITHUB_ENV
      # Should result in something like: `IMAGE_TAG=2.5.1-default-py3.11` or `IMAGE_TAG=2.5.1-recommend-interactive-py3.11`
      - name: Create Docker image tag
        run: echo "IMAGE_TAG=${{ env.SNAP_ATAC_VERSION }}-${{ matrix.snap-atac-flavor }}-${PY_VER_ABBRV}" >> $GITHUB_ENV
      # Check environment variables were set properly
      - name: Check ENV variables
        run: |
          echo "SNAP_ATAC_VERSION: ${{ env.SNAP_ATAC_VERSION }}"
          echo "PY_VER_ABBRV: ${{ env.PY_VER_ABBRV }}"
          echo "IMAGE_TAG: ${{ env.IMAGE_TAG }}"
      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # TODO: Has SnapATAC2 been tested for arm64? If it has and it works then uncomment the following
      #       section and also add `linux/arm64` to `platforms` in subsequent steps:
      # # https://github.com/docker/setup-qemu-action
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      # https://github.com/docker/build-push-action
      # Uses github actions cache: https://docs.docker.com/build/cache/backends/gha/
      - name: Build Dockerfile
        uses: docker/build-push-action@v5
        with:
          context: docker/${{ matrix.snap-atac-flavor }}
          build-args: |
            BASE_PYTHON_IMAGE=${{ matrix.base-docker-image }}
            SNAP_ATAC_VERSION=${{ env.SNAP_ATAC_VERSION }}
          load: true
          tags: snapatac2:TEST-${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Mount the Github Workspace (repository root) into our test container
      # Then install test required packages and run SnapATAC2 Python tests
      - name: Test Docker Image
        run: |
          docker run --rm -t \
            --entrypoint /bin/bash \
            --volume "${{ github.workspace }}":"/github/workspace" \
            snapatac2:TEST-${{ env.IMAGE_TAG }} \
            -c "python3 -m pip install pytest hypothesis && pytest /github/workspace/snapatac2-python/tests"
      # https://github.com/docker/login-action
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # https://github.com/docker/build-push-action
      # Uses cached result from first build
      - name: Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: docker/${{ matrix.snap-atac-flavor }}
          platforms: linux/amd64
          build-args: |
            BASE_PYTHON_IMAGE=${{ matrix.base-docker-image }}
            SNAP_ATAC_VERSION=${{ env.SNAP_ATAC_VERSION }}
          push: true
          tags: snapatac2:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
